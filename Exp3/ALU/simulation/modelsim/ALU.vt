// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "09/20/2020 19:36:47"
                                                                                
// Verilog Test Bench template for design : ALU
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 10 ns/ 1 ps
module ALU_vlg_tst();
// constants                                           
// general purpose registers
//reg eachvec;
// test vector input registers
reg [3:0] A;
reg [3:0] B;
reg [2:0] Op;
// wires                                               
wire Carry;
wire Overflow;
wire [3:0]  Result;

// assign statements (if any)                          
ALU i1 (
// port map - connection between master ports and signals/registers   
	.A(A),
	.B(B),
	.Carry(Carry),
	.Op(Op),
	.Overflow(Overflow),
	.Result(Result)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
	Op=111;	A=1;		B=2;  #10;
				A=-3;		B=-2; #10;
				A=-8;		B=7;	#10;
				A=3;		B=5;	#10;
				A=-5;		B=-4;	#10;
				A=-3;		B=3;	#10;
	Op=110;	A=7;		B=4;  #10;
				A=5;		B=-2; #10;
				A=-3;		B=5;	#10;
				A=-3;		B=6;	#10;
				A=-5;		B=-3;	#10;
				A=3;		B=3;	#10;
	Op=101;	A=4'b0000;		B=0;  #10;
				A=4'b1111;		B=0; 	#10;
				A=4'b1010;		B=0;	#10;
				A=4'b0101;		B=0;	#10;
	Op=100;	A=4'b0000;		B=4'b1111;  #10;
				A=4'b1111;		B=4'b0000; 	#10;
				A=4'b1010;		B=4'b0101;	#10;
				A=4'b1010;		B=4'b1000;	#10;
				A=4'b1101;		B=4'b1011;	#10;	
	Op=011;	A=4'b0000;		B=4'b1111;  #10;
				A=4'b1111;		B=4'b0000; 	#10;
				A=4'b1010;		B=4'b0101;	#10;
				A=4'b1010;		B=4'b1000;	#10;
				A=4'b1101;		B=4'b1000;	#10;
	Op=010;	A=4'b0000;		B=4'b1111;  #10;
				A=4'b1111;		B=4'b0000; 	#10;
				A=4'b1010;		B=4'b0101;	#10;
				A=4'b1010;		B=4'b1000;	#10;
				A=4'b1101;		B=4'b1000;	#10;
	Op=001;	A=3;		B=2;  #10;
				A=-3;		B=-2; #10;
				A=5;		B=-3;	#10;
				A=-3;		B=5;	#10;
				A=-5;		B=-5;	#10;
				A=3;		B=3;	#10;
	Op=000;	A=3;		B=2;  #10;
				A=-3;		B=-2; #10;
				A=5;		B=-3;	#10;
				A=-3;		B=5;	#10;
				A=-5;		B=-5;	#10;
				A=3;		B=3;	#10;
		
// --> end                                             
$display("Running testbench");                       
end                                                    
//always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
//begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
                                                       
//@eachvec;                                              
// --> end                                             
//end                                                    
endmodule

