|keyboardTop
clk => clk.IN2
ps2_clk => ps2_clk.IN1
ps2_data => ps2_data.IN1
HEX0[0] << display:d1.HEX0
HEX0[1] << display:d1.HEX0
HEX0[2] << display:d1.HEX0
HEX0[3] << display:d1.HEX0
HEX0[4] << display:d1.HEX0
HEX0[5] << display:d1.HEX0
HEX0[6] << display:d1.HEX0
HEX1[0] << display:d1.HEX1
HEX1[1] << display:d1.HEX1
HEX1[2] << display:d1.HEX1
HEX1[3] << display:d1.HEX1
HEX1[4] << display:d1.HEX1
HEX1[5] << display:d1.HEX1
HEX1[6] << display:d1.HEX1
HEX2[0] << display:d1.HEX2
HEX2[1] << display:d1.HEX2
HEX2[2] << display:d1.HEX2
HEX2[3] << display:d1.HEX2
HEX2[4] << display:d1.HEX2
HEX2[5] << display:d1.HEX2
HEX2[6] << display:d1.HEX2
HEX3[0] << display:d1.HEX3
HEX3[1] << display:d1.HEX3
HEX3[2] << display:d1.HEX3
HEX3[3] << display:d1.HEX3
HEX3[4] << display:d1.HEX3
HEX3[5] << display:d1.HEX3
HEX3[6] << display:d1.HEX3
HEX4[0] << display:d1.HEX4
HEX4[1] << display:d1.HEX4
HEX4[2] << display:d1.HEX4
HEX4[3] << display:d1.HEX4
HEX4[4] << display:d1.HEX4
HEX4[5] << display:d1.HEX4
HEX4[6] << display:d1.HEX4
HEX5[0] << display:d1.HEX5
HEX5[1] << display:d1.HEX5
HEX5[2] << display:d1.HEX5
HEX5[3] << display:d1.HEX5
HEX5[4] << display:d1.HEX5
HEX5[5] << display:d1.HEX5
HEX5[6] << display:d1.HEX5
spekey[0] << display:d1.spekey
spekey[1] << display:d1.spekey
spekey[2] << display:d1.spekey
spekey[3] << display:d1.spekey
clrn => clrn.IN1
testcase[0] << testcase.DB_MAX_OUTPUT_PORT_TYPE
testcase[1] << testcase.DB_MAX_OUTPUT_PORT_TYPE
testcase[2] << Decoder0.DB_MAX_OUTPUT_PORT_TYPE
data[0] << data[0].DB_MAX_OUTPUT_PORT_TYPE
data[1] << data[1].DB_MAX_OUTPUT_PORT_TYPE
data[2] << data[2].DB_MAX_OUTPUT_PORT_TYPE
data[3] << data[3].DB_MAX_OUTPUT_PORT_TYPE
data[4] << data[4].DB_MAX_OUTPUT_PORT_TYPE
data[5] << data[5].DB_MAX_OUTPUT_PORT_TYPE
data[6] << data[6].DB_MAX_OUTPUT_PORT_TYPE
data[7] << data[7].DB_MAX_OUTPUT_PORT_TYPE
ready << Keyboard:k1.ready


|keyboardTop|Keyboard:k1
clk => fifo.we_a.CLK
clk => fifo.waddr_a[2].CLK
clk => fifo.waddr_a[1].CLK
clk => fifo.waddr_a[0].CLK
clk => fifo.data_a[7].CLK
clk => fifo.data_a[6].CLK
clk => fifo.data_a[5].CLK
clk => fifo.data_a[4].CLK
clk => fifo.data_a[3].CLK
clk => fifo.data_a[2].CLK
clk => fifo.data_a[1].CLK
clk => fifo.data_a[0].CLK
clk => buffer[0].CLK
clk => buffer[1].CLK
clk => buffer[2].CLK
clk => buffer[3].CLK
clk => buffer[4].CLK
clk => buffer[5].CLK
clk => buffer[6].CLK
clk => buffer[7].CLK
clk => buffer[8].CLK
clk => buffer[9].CLK
clk => ready~reg0.CLK
clk => overflow~reg0.CLK
clk => r_ptr[0].CLK
clk => r_ptr[1].CLK
clk => r_ptr[2].CLK
clk => w_ptr[0].CLK
clk => w_ptr[1].CLK
clk => w_ptr[2].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => ps2_clk_sync[0].CLK
clk => ps2_clk_sync[1].CLK
clk => ps2_clk_sync[2].CLK
clk => fifo.CLK0
clrn => count.OUTPUTSELECT
clrn => count.OUTPUTSELECT
clrn => count.OUTPUTSELECT
clrn => count.OUTPUTSELECT
clrn => w_ptr.OUTPUTSELECT
clrn => w_ptr.OUTPUTSELECT
clrn => w_ptr.OUTPUTSELECT
clrn => r_ptr.OUTPUTSELECT
clrn => r_ptr.OUTPUTSELECT
clrn => r_ptr.OUTPUTSELECT
clrn => overflow.OUTPUTSELECT
clrn => ready.OUTPUTSELECT
clrn => fifo.OUTPUTSELECT
clrn => buffer[0].ENA
clrn => buffer[1].ENA
clrn => buffer[2].ENA
clrn => buffer[3].ENA
clrn => buffer[4].ENA
clrn => buffer[5].ENA
clrn => buffer[6].ENA
clrn => buffer[7].ENA
clrn => buffer[8].ENA
clrn => buffer[9].ENA
ps2_clk => ps2_clk_sync[0].DATAIN
ps2_data => always1.IN1
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
data[0] <= fifo.DATAOUT
data[1] <= fifo.DATAOUT1
data[2] <= fifo.DATAOUT2
data[3] <= fifo.DATAOUT3
data[4] <= fifo.DATAOUT4
data[5] <= fifo.DATAOUT5
data[6] <= fifo.DATAOUT6
data[7] <= fifo.DATAOUT7
ready <= ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
nextdata_n => r_ptr.OUTPUTSELECT
nextdata_n => r_ptr.OUTPUTSELECT
nextdata_n => r_ptr.OUTPUTSELECT
nextdata_n => ready.OUTPUTSELECT
overflow <= overflow~reg0.DB_MAX_OUTPUT_PORT_TYPE


|keyboardTop|toASCII:t1
data[0] => toascii.RADDR
data[1] => toascii.RADDR1
data[2] => toascii.RADDR2
data[3] => toascii.RADDR3
data[4] => toascii.RADDR4
data[5] => toascii.RADDR5
data[6] => toascii.RADDR6
data[7] => toascii.RADDR7
asdata[0] <= asdata[0].DB_MAX_OUTPUT_PORT_TYPE
asdata[1] <= asdata[1].DB_MAX_OUTPUT_PORT_TYPE
asdata[2] <= asdata[2].DB_MAX_OUTPUT_PORT_TYPE
asdata[3] <= asdata[3].DB_MAX_OUTPUT_PORT_TYPE
asdata[4] <= asdata[4].DB_MAX_OUTPUT_PORT_TYPE
asdata[5] <= asdata[5].DB_MAX_OUTPUT_PORT_TYPE
asdata[6] <= asdata[6].DB_MAX_OUTPUT_PORT_TYPE
asdata[7] <= asdata[7].DB_MAX_OUTPUT_PORT_TYPE


|keyboardTop|display:d1
clk => HEX5[0]~reg0.CLK
clk => HEX5[1]~reg0.CLK
clk => HEX5[2]~reg0.CLK
clk => HEX5[3]~reg0.CLK
clk => HEX5[4]~reg0.CLK
clk => HEX5[5]~reg0.CLK
clk => HEX5[6]~reg0.CLK
clk => HEX4[0]~reg0.CLK
clk => HEX4[1]~reg0.CLK
clk => HEX4[2]~reg0.CLK
clk => HEX4[3]~reg0.CLK
clk => HEX4[4]~reg0.CLK
clk => HEX4[5]~reg0.CLK
clk => HEX4[6]~reg0.CLK
clk => HEX3[0]~reg0.CLK
clk => HEX3[1]~reg0.CLK
clk => HEX3[2]~reg0.CLK
clk => HEX3[3]~reg0.CLK
clk => HEX3[4]~reg0.CLK
clk => HEX3[5]~reg0.CLK
clk => HEX3[6]~reg0.CLK
clk => HEX2[0]~reg0.CLK
clk => HEX2[1]~reg0.CLK
clk => HEX2[2]~reg0.CLK
clk => HEX2[3]~reg0.CLK
clk => HEX2[4]~reg0.CLK
clk => HEX2[5]~reg0.CLK
clk => HEX2[6]~reg0.CLK
clk => HEX1[0]~reg0.CLK
clk => HEX1[1]~reg0.CLK
clk => HEX1[2]~reg0.CLK
clk => HEX1[3]~reg0.CLK
clk => HEX1[4]~reg0.CLK
clk => HEX1[5]~reg0.CLK
clk => HEX1[6]~reg0.CLK
clk => HEX0[0]~reg0.CLK
clk => HEX0[1]~reg0.CLK
clk => HEX0[2]~reg0.CLK
clk => HEX0[3]~reg0.CLK
clk => HEX0[4]~reg0.CLK
clk => HEX0[5]~reg0.CLK
clk => HEX0[6]~reg0.CLK
clk => offset[0].CLK
clk => offset[1].CLK
clk => offset[2].CLK
clk => offset[3].CLK
clk => myasdata[0].CLK
clk => myasdata[1].CLK
clk => myasdata[2].CLK
clk => myasdata[3].CLK
clk => myasdata[4].CLK
clk => myasdata[5].CLK
clk => myasdata[6].CLK
clk => myasdata[7].CLK
clk => times[0].CLK
clk => times[1].CLK
clk => times[2].CLK
clk => times[3].CLK
clk => times[4].CLK
clk => times[5].CLK
clk => times[6].CLK
clk => times[7].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => up.CLK
clk => curdata[0].CLK
clk => curdata[1].CLK
clk => curdata[2].CLK
clk => curdata[3].CLK
clk => curdata[4].CLK
clk => curdata[5].CLK
clk => curdata[6].CLK
clk => curdata[7].CLK
clk => spekey[0]~reg0.CLK
clk => spekey[1]~reg0.CLK
clk => spekey[2]~reg0.CLK
clk => spekey[3]~reg0.CLK
clk => state~1.DATAIN
HEX0[0] <= HEX0[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[1] <= HEX0[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[2] <= HEX0[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[3] <= HEX0[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[4] <= HEX0[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[5] <= HEX0[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[6] <= HEX0[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[0] <= HEX1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[1] <= HEX1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[2] <= HEX1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[3] <= HEX1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[4] <= HEX1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[5] <= HEX1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[6] <= HEX1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[0] <= HEX2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[1] <= HEX2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[2] <= HEX2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[3] <= HEX2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[4] <= HEX2[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[5] <= HEX2[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[6] <= HEX2[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[0] <= HEX3[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[1] <= HEX3[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[2] <= HEX3[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[3] <= HEX3[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[4] <= HEX3[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[5] <= HEX3[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[6] <= HEX3[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[0] <= HEX4[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[1] <= HEX4[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[2] <= HEX4[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[3] <= HEX4[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[4] <= HEX4[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[5] <= HEX4[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[6] <= HEX4[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX5[0] <= HEX5[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX5[1] <= HEX5[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX5[2] <= HEX5[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX5[3] <= HEX5[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX5[4] <= HEX5[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX5[5] <= HEX5[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX5[6] <= HEX5[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] => Equal0.IN7
data[0] => Decoder1.IN3
data[0] => curdata[0].DATAIN
data[0] => Equal1.IN7
data[0] => Equal2.IN7
data[0] => Equal3.IN7
data[0] => Equal4.IN7
data[1] => Equal0.IN6
data[1] => Decoder1.IN2
data[1] => curdata[1].DATAIN
data[1] => Equal1.IN6
data[1] => Equal2.IN1
data[1] => Equal3.IN6
data[1] => Equal4.IN6
data[2] => Equal0.IN5
data[2] => Decoder1.IN1
data[2] => curdata[2].DATAIN
data[2] => Equal1.IN5
data[2] => Equal2.IN6
data[2] => Equal3.IN1
data[2] => Equal4.IN5
data[3] => Equal0.IN4
data[3] => Decoder1.IN0
data[3] => curdata[3].DATAIN
data[3] => Equal1.IN4
data[3] => Equal2.IN5
data[3] => Equal3.IN5
data[3] => Equal4.IN2
data[4] => Equal0.IN3
data[4] => Decoder2.IN3
data[4] => curdata[4].DATAIN
data[4] => Equal1.IN3
data[4] => Equal2.IN0
data[4] => Equal3.IN0
data[4] => Equal4.IN1
data[5] => Equal0.IN2
data[5] => Decoder2.IN2
data[5] => curdata[5].DATAIN
data[5] => Equal1.IN2
data[5] => Equal2.IN4
data[5] => Equal3.IN4
data[5] => Equal4.IN4
data[6] => Equal0.IN1
data[6] => Decoder2.IN1
data[6] => curdata[6].DATAIN
data[6] => Equal1.IN1
data[6] => Equal2.IN3
data[6] => Equal3.IN3
data[6] => Equal4.IN0
data[7] => Equal0.IN0
data[7] => Decoder2.IN0
data[7] => curdata[7].DATAIN
data[7] => Equal1.IN0
data[7] => Equal2.IN2
data[7] => Equal3.IN2
data[7] => Equal4.IN3
asdata[0] => Decoder0.IN7
asdata[0] => Selector6.IN5
asdata[0] => myasdata.DATAA
asdata[1] => Decoder0.IN6
asdata[1] => Selector5.IN5
asdata[1] => myasdata.DATAA
asdata[2] => Decoder0.IN5
asdata[2] => Selector4.IN5
asdata[2] => myasdata.DATAA
asdata[3] => Decoder0.IN4
asdata[3] => Selector3.IN5
asdata[3] => myasdata.DATAA
asdata[4] => Decoder0.IN3
asdata[4] => Selector2.IN5
asdata[4] => myasdata.DATAA
asdata[5] => Decoder0.IN2
asdata[5] => Selector1.IN5
asdata[5] => myasdata.DATAA
asdata[6] => Decoder0.IN1
asdata[6] => Selector0.IN5
asdata[6] => myasdata.DATAA
asdata[7] => Decoder0.IN0
asdata[7] => myasdata.DATAA
asdata[7] => myasdata.DATAA
spekey[0] <= spekey[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
spekey[1] <= spekey[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
spekey[2] <= spekey[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
spekey[3] <= spekey[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


