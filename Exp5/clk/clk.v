
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module clk(

	//////////// CLOCK //////////
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// Seg7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5
);



//=======================================================
//  REG/WIRE declarations
//=======================================================
//wire clk_1s;
wire [19:0] count_1,count_2,count_3,count;
wire [6:0] hex_num;
wire [20:0] d;


	div #25000000 div1(CLOCK2_50,LEDR[0]);
	div #250000 div2(CLOCK2_50,LEDR[1]);
	clock clock1(LEDR[0],SW[1:0],KEY[0],KEY[1],KEY[2],count_1);
	Timer timer1(LEDR[1],SW[1:0],KEY[0],KEY[1],KEY[2],count_2);
	alarm alarm1(LEDR[0],SW[1:0],KEY[0],KEY[1],KEY[2],count_3);

	
assign count=(SW[1])?count_3:((SW[0])?count_2:count_1);
assign hex_num=(SW[1])?60:((SW[0])?100:60);

assign d=count_1-count_3;
assign LEDR[2]=(((d>=0&&d<=10)||(d>=-86400&&d<=-86390))&&SW[2]);

decode_hex hex1(hex_num,count,HEX0,HEX1,HEX2,HEX3,HEX4,HEX5);


//=======================================================
//  Structural coding
//=======================================================



endmodule
